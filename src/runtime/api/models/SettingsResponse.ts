/* tslint:disable */
/* eslint-disable */
/**
 * mongocamp-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SettingsResponse
 */
export interface SettingsResponse {
    /**
     * 
     * @type {Array<string>}
     * @memberof SettingsResponse
     */
    routesPlugins?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SettingsResponse
     */
    filePlugins?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SettingsResponse
     */
    ignoredPlugins?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SettingsResponse
     */
    configurations: { [key: string]: string; };
}

export function SettingsResponseFromJSON(json: any): SettingsResponse {
    return SettingsResponseFromJSONTyped(json, false);
}

export function SettingsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'routesPlugins': !exists(json, 'routesPlugins') ? undefined : json['routesPlugins'],
        'filePlugins': !exists(json, 'filePlugins') ? undefined : json['filePlugins'],
        'ignoredPlugins': !exists(json, 'ignoredPlugins') ? undefined : json['ignoredPlugins'],
        'configurations': json['configurations'],
    };
}

export function SettingsResponseToJSON(value?: SettingsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'routesPlugins': value.routesPlugins,
        'filePlugins': value.filePlugins,
        'ignoredPlugins': value.ignoredPlugins,
        'configurations': value.configurations,
    };
}

