/* tslint:disable */
/* eslint-disable */
/**
 * mongocamp-library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Grant } from './Grant';
import {
    GrantFromJSON,
    GrantFromJSONTyped,
    GrantToJSON,
    GrantToJSONTyped,
} from './Grant';

/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    user: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    isAdmin: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    apiKey?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserProfile
     */
    roles?: Array<string>;
    /**
     * 
     * @type {Array<Grant>}
     * @memberof UserProfile
     */
    grants?: Array<Grant>;
}

/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): value is UserProfile {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('isAdmin' in value) || value['isAdmin'] === undefined) return false;
    return true;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'],
        'isAdmin': json['isAdmin'],
        'apiKey': json['apiKey'] == null ? undefined : json['apiKey'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'grants': json['grants'] == null ? undefined : ((json['grants'] as Array<any>).map(GrantFromJSON)),
    };
}

  export function UserProfileToJSON(json: any): UserProfile {
      return UserProfileToJSONTyped(json, false);
  }

  export function UserProfileToJSONTyped(value?: UserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': value['user'],
        'isAdmin': value['isAdmin'],
        'apiKey': value['apiKey'],
        'roles': value['roles'],
        'grants': value['grants'] == null ? undefined : ((value['grants'] as Array<any>).map(GrantToJSON)),
    };
}

