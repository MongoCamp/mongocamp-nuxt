/* tslint:disable */
/* eslint-disable */
/**
 * mongocamp-library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SchemaAnalysisField } from './SchemaAnalysisField';
import {
    SchemaAnalysisFieldFromJSON,
    SchemaAnalysisFieldFromJSONTyped,
    SchemaAnalysisFieldToJSON,
} from './SchemaAnalysisField';

/**
 * 
 * @export
 * @interface SchemaAnalysis
 */
export interface SchemaAnalysis {
    /**
     * 
     * @type {number}
     * @memberof SchemaAnalysis
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof SchemaAnalysis
     */
    sample: number;
    /**
     * 
     * @type {number}
     * @memberof SchemaAnalysis
     */
    percentageOfAnalysed: number;
    /**
     * 
     * @type {Array<SchemaAnalysisField>}
     * @memberof SchemaAnalysis
     */
    fields?: Array<SchemaAnalysisField>;
}

/**
 * Check if a given object implements the SchemaAnalysis interface.
 */
export function instanceOfSchemaAnalysis(value: object): boolean {
    if (!('count' in value)) return false;
    if (!('sample' in value)) return false;
    if (!('percentageOfAnalysed' in value)) return false;
    return true;
}

export function SchemaAnalysisFromJSON(json: any): SchemaAnalysis {
    return SchemaAnalysisFromJSONTyped(json, false);
}

export function SchemaAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchemaAnalysis {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'sample': json['sample'],
        'percentageOfAnalysed': json['percentageOfAnalysed'],
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(SchemaAnalysisFieldFromJSON)),
    };
}

export function SchemaAnalysisToJSON(value?: SchemaAnalysis | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'sample': value['sample'],
        'percentageOfAnalysed': value['percentageOfAnalysed'],
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(SchemaAnalysisFieldToJSON)),
    };
}

