/* tslint:disable */
/* eslint-disable */
/**
 * mongocamp-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CollectionStatus
 */
export interface CollectionStatus {
    /**
     * 
     * @type {string}
     * @memberof CollectionStatus
     */
    ns: string;
    /**
     * 
     * @type {string}
     * @memberof CollectionStatus
     */
    collectionType: string;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    scaleFactor: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    storageSize: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    avgObjSize: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    nindexes: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof CollectionStatus
     */
    indexSizes: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    totalIndexSize: number;
    /**
     * 
     * @type {number}
     * @memberof CollectionStatus
     */
    ok: number;
    /**
     * 
     * @type {Date}
     * @memberof CollectionStatus
     */
    fetched: Date;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CollectionStatus
     */
    map: { [key: string]: string; };
}

/**
 * Check if a given object implements the CollectionStatus interface.
 */
export function instanceOfCollectionStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ns" in value;
    isInstance = isInstance && "collectionType" in value;
    isInstance = isInstance && "scaleFactor" in value;
    isInstance = isInstance && "size" in value;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "storageSize" in value;
    isInstance = isInstance && "avgObjSize" in value;
    isInstance = isInstance && "nindexes" in value;
    isInstance = isInstance && "indexSizes" in value;
    isInstance = isInstance && "totalIndexSize" in value;
    isInstance = isInstance && "ok" in value;
    isInstance = isInstance && "fetched" in value;
    isInstance = isInstance && "map" in value;

    return isInstance;
}

export function CollectionStatusFromJSON(json: any): CollectionStatus {
    return CollectionStatusFromJSONTyped(json, false);
}

export function CollectionStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ns': json['ns'],
        'collectionType': json['collectionType'],
        'scaleFactor': json['scaleFactor'],
        'size': json['size'],
        'count': json['count'],
        'storageSize': json['storageSize'],
        'avgObjSize': json['avgObjSize'],
        'nindexes': json['nindexes'],
        'indexSizes': json['indexSizes'],
        'totalIndexSize': json['totalIndexSize'],
        'ok': json['ok'],
        'fetched': (new Date(json['fetched'])),
        'map': json['map'],
    };
}

export function CollectionStatusToJSON(value?: CollectionStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ns': value.ns,
        'collectionType': value.collectionType,
        'scaleFactor': value.scaleFactor,
        'size': value.size,
        'count': value.count,
        'storageSize': value.storageSize,
        'avgObjSize': value.avgObjSize,
        'nindexes': value.nindexes,
        'indexSizes': value.indexSizes,
        'totalIndexSize': value.totalIndexSize,
        'ok': value.ok,
        'fetched': (value.fetched.toISOString()),
        'map': value.map,
    };
}

